version: 2.1
orbs:
  slack: circleci/slack@4.3.0
  aws-cli: circleci/aws-cli@1.3.0
commands:
  slack-notification-fail:
    description: Send notification to Slack
    steps:
      - slack/notify:
          channel: C01Q98F10H2
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "Your job *$CIRCLE_JOB* has *faild* :octagonal_sign: (<$CIRCLE_BUILD_URL|build #$CIRCLE_BUILD_NUM>)\n\nrepo: $CIRCLE_REPOSITORY_URL\n\nbranch: $CIRCLE_BRANCH\n\ncommitter: $CIRCLE_USERNAME"
                  }
                }
              ]
            }
  slack-notification-pass:
    description: Send notification to Slack
    steps:
      - slack/notify:
          channel: C01Q98F10H2
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "Your job *$CIRCLE_JOB* has *built* :white_check_mark: (<$CIRCLE_BUILD_URL|build #$CIRCLE_BUILD_NUM>)\n\nrepo: $CIRCLE_REPOSITORY_URL\n\nbranch: $CIRCLE_BRANCH\n\ncommitter: $CIRCLE_USERNAME"
                  }
                }
              ]
            }
jobs:
  setup-environment:
    docker:
      - image: circleci/node:12.16-browsers
    steps:
      - checkout
      - run:
          name: Show current branch
          command: |
            echo ${CIRCLE_BRANCH}
            echo $CIRCLE_WORKING_DIRECTORY
            ls
      - run:
          name: Install prerequsites
          command: |
            sudo apt -y install git curl
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./frontend/package.json" }}
            - v1-dependencies-
         # Install project dependencies
      - run:
          name: Install local dependencies
          command: |
            cd frontend
            npm install
          # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "./frontend/package.json" }}
          paths:
            - ./frontend/node_modules
  test-frontend:
    docker:
      - image: circleci/node:12.16-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./frontend/package.json" }}
            - v1-dependencies-
      - run:
          name: Install local dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Run frontend tests
          command: |
            cd frontend
            npm run test  --watch=false
      - run:
          name: lint frontend
          command: |
            cd frontend
            npm run lint
      - run:
          name: Scan frontend security
          command: |
            cd frontend
            npm audit --audit-level=critical
      - slack-notification-fail
  build-frontend:
    docker:
      - image: circleci/node:12.16-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./frontend/package.json" }}
            - v1-dependencies-
      - run:
          name: Install local dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm run build
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./frontend/dist
      - slack-notification-fail
  deploy-frontend:
    docker:
      - image:  docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
             - v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: |
            docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
            echo $CIRCLE_WORKING_DIRECTORY
            cd /home/circleci/project/frontend
            ls -d * */*
      - run:
          name: build a docker container
          command: |
            cd frontend
            docker build . --tag=ramyaperi/dev:devops-${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: push a docker container
          command: |
            cd frontend
            docker push ramyaperi/dev:devops-"${CIRCLE_WORKFLOW_ID:0:7}"
      - slack-notification-fail
workflows:
  default:
    jobs:
      - setup-environment:
          context: slack
      - test-frontend:
          context: slack
          requires: [setup-environment]
      - build-frontend:
          context: slack
          requires:
            - setup-environment
            - test-frontend
      - deploy-frontend:
          context: slack
          requires:
            - build-frontend
