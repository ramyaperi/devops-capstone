version: 2.1
orbs:
  slack: circleci/slack@4.3.0
  aws-cli: circleci/aws-cli@1.3.0
commands:
  slack-notification-fail:
    description: Send notification to Slack
    steps:
      - slack/notify:
          channel: C01Q98F10H2
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "Your job *$CIRCLE_JOB* has *faild* :octagonal_sign: (<$CIRCLE_BUILD_URL|build #$CIRCLE_BUILD_NUM>)\n\nrepo: $CIRCLE_REPOSITORY_URL\n\nbranch: $CIRCLE_BRANCH\n\ncommitter: $CIRCLE_USERNAME"
                  }
                }
              ]
            }
  slack-notification-pass:
    description: Send notification to Slack
    steps:
      - slack/notify:
          channel: C01Q98F10H2
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "Your job *$CIRCLE_JOB* has *built* :white_check_mark: (<$CIRCLE_BUILD_URL|build #$CIRCLE_BUILD_NUM>)\n\nrepo: $CIRCLE_REPOSITORY_URL\n\nbranch: $CIRCLE_BRANCH\n\ncommitter: $CIRCLE_USERNAME"
                  }
                }
              ]
            }
executors:
  my-executor:
    docker:
      - image: circleci/node:8.9.4-browsers
jobs:
  setup-environment:
    executor: my-executor
    steps:
      - run:
          name: Install local dependencies
          command: |
            sudo npm i npm@6.9.0 -g
            npm i -g @angular/cli
            npm install
      - run:
          name: Build Node Sass
          command: npm install --unsafe-perm node-sass
      - save_cache:
          key: v1-dependencies-{{ checksum "frontend/package.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - src
            - package.json
            - angular.json
            - Dockerfile
            - tslint.json
            - tsconfig.json
  build-frontend:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "frontend/package.json" }}
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm run build
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - frontend/dist
      - persist_to_workspace:
          root: .
          paths:
            - frontend/dist
      - slack-notification-fail
  test-frontend:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "frontend/package.json" }}
      - run:
          name: Run frontend tests
          command: |
            cd frontend
            npm i
            npm run test
      - slack-notification-fail
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout

      - run:
          name: Install prerequsites
          command: |
            sudo apt -y install jq tar gzip git curl

      - restore_cache:
          key: frontend-build
      - run:
          name: Scan frontend depedencies
          command: |
            cd frontend
            npm audit --audit-level=critical
      - slack-notification-fail
  deploy-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - aws-cli/setup
      - attach_workspace:
          at: ~/
      - run:
          name: Install dependencies
          command: |
            cd frontend
            sudo apt -y install jq tar gzip git curl
            npm install -g @angular/cli
            npm install
      - run:
          name: Build frontend
          command: |
            cd frontend
            npm run build
      - run:
          name: build a docker container
          command: |
            docker build --tag=ramyaperi/dev:devops-"${CIRCLE_WORKFLOW_ID:0:7}" .
      - run:
          name: push a docker container
          command: |
            docker push ramyaperi/dev:devops-"${CIRCLE_WORKFLOW_ID:0:7}"
      - slack-notification-fail
workflows:
  default:
    jobs:
      - build-frontend:
          context: slack
